=pod

=encoding utf-8

=head1 NAME

Geo::UK::Postcode - Object and class methods for working with British postcodes.

=head1 VERSION

version 0.001

=head1 SYNOPSIS

  use Geo::UK::Postcode;
  
  my $pc = Geo::UK::Postcode->new( "WC1H 9EB" );
  
  $pc->area;           # WC
  $pc->district;       # 1
  $pc->subdistrict;    # H
  $pc->sector;         # 9
  $pc->unit;           # EB
  
  $pc->outcode;        # WC1H
  $pc->incode;         # 9EB
  
  "$pc";               # stringifies to: WC1H 9EB
  $pc->fixed_format;   # 8 characters, the incode always last three

  # Sort Postcode objects:
  use Geo::UK::Postcode qw/ pc_sort /;
  
  my @sorted_pcs = sort pc_sort @unsorted_pcs;

=head1 DESCRIPTION

An attempt to make a useful package for dealing with UK Postcodes.

Currently in development - feedback welcome.

See L<Geo::UK::Postcode::Regex> for more postcode parsing.

=head1 METHODS

=head2 area, district, subdistrict, sector, unit

Return the corresponding part of the postcode, undef if not present.

=head2 outcode

The first half of the postcode, before the space - comprises of the area and
district.

=head2 incode

The second half of the postcode, after the space - comprises of the sector
and unit. Returns an empty string if not present.

=head2 outward, inward

Aliases for C<outcode> and C<incode>.

=head2 fixed_format

    my $fixed_format = $postcode->fixed_format;

Returns the full postcode in a fixed length (8 character) format, with extra
padding spaces inserted as necessary.

=head2 valid

=head2 partial

=head2 strict

=head2 posttowns

    my (@posttowns) = $postcode->posttowns;

Returns list of one or more posttowns that this postcode is assigned to.

=head2 is_valid

    unless ($postcode->is_valid) {
       print "$postcode does not have a valid outcode!";
    }

Returns true or false depending if the outcode is valid or not. Note that
the full postcode might still not exist.

=head1 EXPORTABLE

=head2 pc_sort

    my @sorted_pcs = sort pc_sort @unsorted_pcs;

Exportable sort function, sorts postcode objects

=head1 SEE ALSO

=over

=item Geo::Address::Mail::UK

=item Geo::Postcode

=item Data::Validation::Constraints::Postcode

=item CGI::Untaint::uk_postcode

=item Form::Validator::UKPostcode 

=back

=head1 TODO

=over

=item Finalise API

=item Handle non-geographic postcodes

=item Handle British overseas territories

=item Handle special case postcodes, like GIR 0AA and SAN TA1

=back

=for :stopwords cpan testmatrix url annocpan anno bugtracker rt cpants kwalitee diff irc mailto metadata placeholders metacpan

=head1 SUPPORT

=head2 Bugs / Feature Requests

Please report any bugs or feature requests through the issue tracker
at L<https://github.com/mjemmeson/geo-uk-postcode/issues>.
You will be notified automatically of any progress on your issue.

=head2 Source Code

This is open source software.  The code repository is available for
public review and contribution under the terms of the license.

L<https://github.com/mjemmeson/geo-uk-postcode>

  git clone git://github.com/mjemmeson/geo-uk-postcode.git

=head1 AUTHOR

Michael Jemmeson <mjemmeson@cpan.org>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2013 by Michael Jemmeson <mjemmeson@cpan.org>.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

